apply plugin: 'groovy'

//Added from https://github.com/patrikerdes/gradle-use-latest-versions-plugin for dependency updates
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "se.patrikerdes:gradle-use-latest-versions-plugin:0.2.18"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.51.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'se.patrikerdes.use-latest-versions'

sourceSets {
    jobs {
        groovy {
            srcDirs 'src/jobs'
            compileClasspath += main.compileClasspath
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.jenkins-ci.org/public/' }
}

configurations {
    testPlugins {}

    // see JENKINS-45512
    testImplementation {
        exclude group: 'xalan'
        exclude group: 'xerces'
    }
}

// Exclude buggy Xalan dependency this way the JRE default TransformerFactory is used
// The xalan pulled in by htmlunit does not properly deal with spaces folder / job names
configurations.all*.exclude group: 'xalan'

dependencies {
    implementation platform('org.apache.groovy:groovy-bom:4.0.20')    
    implementation 'org.apache.groovy:groovy:4.0.20'
    // Added exclusion due to listed issue: https://issues.jenkins.io/browse/JENKINS-65341
    implementation ("org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"){
        exclude module: 'xstream'
    }
    implementation 'org.kohsuke:github-api:1.321' // GitHub API
    testImplementation platform("org.spockframework:spock-bom:2.4-M4-groovy-4.0")
    testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0' // Spock testing framework
    testImplementation 'cglib:cglib-nodep:3.3.0' // used by Spock
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2' // JUnit 5

    // Jenkins test harness dependencies
    testImplementation('org.jenkins-ci.main:jenkins-test-harness:2174.v111a_b_471784f') {
        exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane' // https://github.com/sheehan/job-dsl-gradle-example/issues/90
    }
    testImplementation("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
        exclude group: 'org.jenkins-ci.ui', module: 'bootstrap' // https://github.com/sheehan/job-dsl-gradle-example/issues/87
    }

    // Job DSL plugin including plugin dependencies
    testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}" // Job DSL plugin
    testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar" // Job DSL plugin
    testImplementation 'org.jenkins-ci.plugins:structs:337.v1b_04ea_4df7c8' // structs plugin
    testImplementation 'org.jenkins-ci.plugins:script-security:1326.vdb_c154de8669' // script-security plugin



    // Plugins to install in test instance
    testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps:3883.vb_3ff2a_e3eea_f' // workflow-cps plugin
    testPlugins 'org.jenkins-ci.plugins.workflow:workflow-job:1400.v7fd111b_ec82f' // workflow-job plugin
    testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.928.v7c780211d66e'
    testPlugins 'org.jenkins-ci.plugins:credentials:1337.v60b_d7b_c7b_c9f'
    testPlugins 'org.jenkins-ci.plugins:cvs:2.19.1'
    testPlugins 'org.jenkins-ci.plugins:ghprb:1.42.2'
    testPlugins 'org.jenkins-ci.plugins:token-macro:400.v35420b_922dcb_'
    testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps-global-lib:612.v55f2f80781ef'

}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'
    def mapping = [:]

    doFirst {
        configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
            mapping[it.file.name] = "${it.name}.${it.extension}"
        }
    }
    rename { mapping[it] }

    doLast {
        List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
}
}
